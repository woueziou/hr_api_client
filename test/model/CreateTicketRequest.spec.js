/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HrApi);
  }
}(this, function(expect, HrApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HrApi.CreateTicketRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateTicketRequest', function() {
    it('should create an instance of CreateTicketRequest', function() {
      // uncomment below and update the code to test CreateTicketRequest
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be.a(HrApi.CreateTicketRequest);
    });

    it('should have the property ticketTypeId (base name: "ticketTypeId")', function() {
      // uncomment below and update the code to test the property ticketTypeId
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property benefitId (base name: "benefitId")', function() {
      // uncomment below and update the code to test the property benefitId
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property carrierId (base name: "carrierId")', function() {
      // uncomment below and update the code to test the property carrierId
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property dateDeparture (base name: "dateDeparture")', function() {
      // uncomment below and update the code to test the property dateDeparture
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property originStation (base name: "originStation")', function() {
      // uncomment below and update the code to test the property originStation
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property destinationStation (base name: "destinationStation")', function() {
      // uncomment below and update the code to test the property destinationStation
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property dateDesired (base name: "dateDesired")', function() {
      // uncomment below and update the code to test the property dateDesired
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

    it('should have the property additionalComments (base name: "additionalComments")', function() {
      // uncomment below and update the code to test the property additionalComments
      //var instance = new HrApi.CreateTicketRequest();
      //expect(instance).to.be();
    });

  });

}));
