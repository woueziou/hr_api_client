/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TicketResponse model module.
 * @module model/TicketResponse
 * @version v1
 */
class TicketResponse {
    /**
     * Constructs a new <code>TicketResponse</code>.
     * @alias module:model/TicketResponse
     */
    constructor() { 
        
        TicketResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TicketResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TicketResponse} obj Optional instance to populate.
     * @return {module:model/TicketResponse} The populated <code>TicketResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TicketResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('dateDeparture')) {
                obj['dateDeparture'] = ApiClient.convertToType(data['dateDeparture'], 'Date');
            }
            if (data.hasOwnProperty('dateDesired')) {
                obj['dateDesired'] = ApiClient.convertToType(data['dateDesired'], 'Date');
            }
            if (data.hasOwnProperty('carrierName')) {
                obj['carrierName'] = ApiClient.convertToType(data['carrierName'], 'Number');
            }
            if (data.hasOwnProperty('beneficiaryFirstName')) {
                obj['beneficiaryFirstName'] = ApiClient.convertToType(data['beneficiaryFirstName'], 'String');
            }
            if (data.hasOwnProperty('beneficiaryLastName')) {
                obj['beneficiaryLastName'] = ApiClient.convertToType(data['beneficiaryLastName'], 'String');
            }
            if (data.hasOwnProperty('destinationStationName')) {
                obj['destinationStationName'] = ApiClient.convertToType(data['destinationStationName'], 'String');
            }
            if (data.hasOwnProperty('originStationName')) {
                obj['originStationName'] = ApiClient.convertToType(data['originStationName'], 'Number');
            }
            if (data.hasOwnProperty('ticketTypeName')) {
                obj['ticketTypeName'] = ApiClient.convertToType(data['ticketTypeName'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
TicketResponse.prototype['id'] = undefined;

/**
 * @member {String} comment
 */
TicketResponse.prototype['comment'] = undefined;

/**
 * @member {Date} dateDeparture
 */
TicketResponse.prototype['dateDeparture'] = undefined;

/**
 * @member {Date} dateDesired
 */
TicketResponse.prototype['dateDesired'] = undefined;

/**
 * @member {Number} carrierName
 */
TicketResponse.prototype['carrierName'] = undefined;

/**
 * @member {String} beneficiaryFirstName
 */
TicketResponse.prototype['beneficiaryFirstName'] = undefined;

/**
 * @member {String} beneficiaryLastName
 */
TicketResponse.prototype['beneficiaryLastName'] = undefined;

/**
 * @member {String} destinationStationName
 */
TicketResponse.prototype['destinationStationName'] = undefined;

/**
 * @member {Number} originStationName
 */
TicketResponse.prototype['originStationName'] = undefined;

/**
 * @member {Number} ticketTypeName
 */
TicketResponse.prototype['ticketTypeName'] = undefined;






export default TicketResponse;

