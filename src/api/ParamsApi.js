/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CountryResponse from '../model/CountryResponse';
import OrganizationResponse from '../model/OrganizationResponse';
import PermissionTypeResponse from '../model/PermissionTypeResponse';
import PostionResponse from '../model/PostionResponse';
import StationResponse from '../model/StationResponse';

/**
* Params service.
* @module api/ParamsApi
* @version 1.0.0
*/
export default class ParamsApi {

    /**
    * Constructs a new ParamsApi. 
    * @alias module:api/ParamsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiParamsGetCountriesGet operation.
     * @callback module:api/ParamsApi~apiParamsGetCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CountryResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ParamsApi~apiParamsGetCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CountryResponse>}
     */
    apiParamsGetCountriesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [CountryResponse];
      return this.apiClient.callApi(
        '/api/Params/GetCountries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiParamsGetOrganizationsGet operation.
     * @callback module:api/ParamsApi~apiParamsGetOrganizationsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OrganizationResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ParamsApi~apiParamsGetOrganizationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OrganizationResponse>}
     */
    apiParamsGetOrganizationsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [OrganizationResponse];
      return this.apiClient.callApi(
        '/api/Params/GetOrganizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiParamsGetPermissionTypeListGet operation.
     * @callback module:api/ParamsApi~apiParamsGetPermissionTypeListGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PermissionTypeResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ParamsApi~apiParamsGetPermissionTypeListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PermissionTypeResponse>}
     */
    apiParamsGetPermissionTypeListGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PermissionTypeResponse];
      return this.apiClient.callApi(
        '/api/Params/GetPermissionTypeList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiParamsGetPositionsGet operation.
     * @callback module:api/ParamsApi~apiParamsGetPositionsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PostionResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ParamsApi~apiParamsGetPositionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PostionResponse>}
     */
    apiParamsGetPositionsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PostionResponse];
      return this.apiClient.callApi(
        '/api/Params/GetPositions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiParamsGetStationsGet operation.
     * @callback module:api/ParamsApi~apiParamsGetStationsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/StationResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ParamsApi~apiParamsGetStationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/StationResponse>}
     */
    apiParamsGetStationsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [StationResponse];
      return this.apiClient.callApi(
        '/api/Params/GetStations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
