/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CountryResponse from './model/CountryResponse';
import CreatePermissionRequest from './model/CreatePermissionRequest';
import CreateTicketRequest from './model/CreateTicketRequest';
import Credential from './model/Credential';
import LoginModel from './model/LoginModel';
import OrganizationResponse from './model/OrganizationResponse';
import Permission from './model/Permission';
import PermissionHistory from './model/PermissionHistory';
import PermissionResponse from './model/PermissionResponse';
import PermissionType from './model/PermissionType';
import PermissionTypeResponse from './model/PermissionTypeResponse';
import PostionResponse from './model/PostionResponse';
import RegisterModel from './model/RegisterModel';
import Request from './model/Request';
import RequestValidator from './model/RequestValidator';
import StationResponse from './model/StationResponse';
import TicketResponse from './model/TicketResponse';
import Tokens from './model/Tokens';
import User from './model/User';
import UserResponse from './model/UserResponse';
import ValidationHanldeRequest from './model/ValidationHanldeRequest';
import AuthenticationApi from './api/AuthenticationApi';
import ParamsApi from './api/ParamsApi';
import RequestApi from './api/RequestApi';
import TicketApi from './api/TicketApi';
import VacationApi from './api/VacationApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HrApi = require('index'); // See note below*.
* var xxxSvc = new HrApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HrApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HrApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HrApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CountryResponse model constructor.
     * @property {module:model/CountryResponse}
     */
    CountryResponse,

    /**
     * The CreatePermissionRequest model constructor.
     * @property {module:model/CreatePermissionRequest}
     */
    CreatePermissionRequest,

    /**
     * The CreateTicketRequest model constructor.
     * @property {module:model/CreateTicketRequest}
     */
    CreateTicketRequest,

    /**
     * The Credential model constructor.
     * @property {module:model/Credential}
     */
    Credential,

    /**
     * The LoginModel model constructor.
     * @property {module:model/LoginModel}
     */
    LoginModel,

    /**
     * The OrganizationResponse model constructor.
     * @property {module:model/OrganizationResponse}
     */
    OrganizationResponse,

    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission,

    /**
     * The PermissionHistory model constructor.
     * @property {module:model/PermissionHistory}
     */
    PermissionHistory,

    /**
     * The PermissionResponse model constructor.
     * @property {module:model/PermissionResponse}
     */
    PermissionResponse,

    /**
     * The PermissionType model constructor.
     * @property {module:model/PermissionType}
     */
    PermissionType,

    /**
     * The PermissionTypeResponse model constructor.
     * @property {module:model/PermissionTypeResponse}
     */
    PermissionTypeResponse,

    /**
     * The PostionResponse model constructor.
     * @property {module:model/PostionResponse}
     */
    PostionResponse,

    /**
     * The RegisterModel model constructor.
     * @property {module:model/RegisterModel}
     */
    RegisterModel,

    /**
     * The Request model constructor.
     * @property {module:model/Request}
     */
    Request,

    /**
     * The RequestValidator model constructor.
     * @property {module:model/RequestValidator}
     */
    RequestValidator,

    /**
     * The StationResponse model constructor.
     * @property {module:model/StationResponse}
     */
    StationResponse,

    /**
     * The TicketResponse model constructor.
     * @property {module:model/TicketResponse}
     */
    TicketResponse,

    /**
     * The Tokens model constructor.
     * @property {module:model/Tokens}
     */
    Tokens,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserResponse model constructor.
     * @property {module:model/UserResponse}
     */
    UserResponse,

    /**
     * The ValidationHanldeRequest model constructor.
     * @property {module:model/ValidationHanldeRequest}
     */
    ValidationHanldeRequest,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The ParamsApi service constructor.
    * @property {module:api/ParamsApi}
    */
    ParamsApi,

    /**
    * The RequestApi service constructor.
    * @property {module:api/RequestApi}
    */
    RequestApi,

    /**
    * The TicketApi service constructor.
    * @property {module:api/TicketApi}
    */
    TicketApi,

    /**
    * The VacationApi service constructor.
    * @property {module:api/VacationApi}
    */
    VacationApi
};
