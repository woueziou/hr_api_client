openapi: 3.0.1
info:
  title: HR API
  version: v1
servers:
  - url: https://localhost:7266/
    description: DevUrl
  - url: http://hrbackend.flyasky.aero/
    description: ProdUrl
paths:
  /api/Authentication/LoginUser:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Tokens'
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
            text/json:
              schema:
                $ref: '#/components/schemas/Tokens'
  /api/Authentication/RegisterUser:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/Authentication/WhoAmI:
    get:
      tags:
        - Authentication
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/Params/GetPositions:
    get:
      tags:
        - Params
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostionResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostionResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostionResponse'
  /api/Params/GetOrganizations:
    get:
      tags:
        - Params
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
  /api/Params/GetPermissionTypeList:
    get:
      tags:
        - Params
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionTypeResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionTypeResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionTypeResponse'
  /api/Params/GetCountries:
    get:
      tags:
        - Params
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryResponse'
  /api/Params/GetStations:
    get:
      tags:
        - Params
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationResponse'
  /api/Request/HandleValidation:
    post:
      tags:
        - Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationHanldeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ValidationHanldeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ValidationHanldeRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationHandleResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationHandleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationHandleResponse'
  /api/Ticket/CreateTicketRequest:
    post:
      tags:
        - Ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
  /api/Vacation/MakeVacationRequest:
    post:
      tags:
        - Vacation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Permission'
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
            text/json:
              schema:
                $ref: '#/components/schemas/Permission'
  /api/Vacation/GetVacationRequests:
    get:
      tags:
        - Vacation
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionResponse'
components:
  schemas:
    CountryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        index:
          type: integer
          format: int32
      additionalProperties: false
    CreatePermissionRequest:
      required:
        - dateReturn
        - dateStart
      type: object
      properties:
        dateStart:
          type: string
          format: date-time
        dateReturn:
          type: string
          format: date-time
        backupUserId:
          type: string
          nullable: true
        permissionTypeId:
          type: integer
          format: int32
        additionalComments:
          type: string
          nullable: true
      additionalProperties: false
    CreateTicketRequest:
      required:
        - dateDeparture
        - dateDesired
        - destinationStation
        - originStation
        - ticketTypeId
      type: object
      properties:
        ticketTypeId:
          type: integer
          format: int32
        benefitId:
          type: string
          nullable: true
        carrierId:
          type: integer
          format: int32
        dateDeparture:
          type: string
          format: date-time
        originStation:
          maxLength: 3
          minLength: 3
          type: integer
          format: int32
        destinationStation:
          maxLength: 3
          minLength: 3
          type: integer
          format: int32
        dateDesired:
          type: string
          format: date-time
        additionalComments:
          type: string
          nullable: true
      additionalProperties: false
    Credential:
      type: object
      properties:
        id:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        userId:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    LoginModel:
      required:
        - password
        - userName
      type: object
      properties:
        userName:
          type: string
        password:
          maxLength: 100
          minLength: 8
          type: string
      additionalProperties: false
    OrganizationResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        organizationtypeName:
          type: string
          nullable: true
      additionalProperties: false
    Permission:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateStart:
          type: string
          format: date-time
        dateReturn:
          type: string
          format: date-time
        isAllowed:
          type: boolean
        userId:
          type: string
          nullable: true
        permissionTypeId:
          type: integer
          format: int32
        permissionType:
          $ref: '#/components/schemas/PermissionType'
        user:
          $ref: '#/components/schemas/User'
        permissionHistories:
          type: array
          items:
            $ref: '#/components/schemas/PermissionHistory'
          nullable: true
      additionalProperties: false
    PermissionHistory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        permissionId:
          type: string
          nullable: true
        response:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        authorityId:
          type: string
          nullable: true
        dateDecision:
          type: string
          format: date-time
        authority:
          $ref: '#/components/schemas/User'
        permission:
          $ref: '#/components/schemas/Permission'
      additionalProperties: false
    PermissionResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateStart:
          type: string
          format: date-time
        dateReturn:
          type: string
          format: date-time
        isAllowed:
          type: boolean
        userFirstName:
          type: string
          nullable: true
        userLastName:
          type: string
          nullable: true
        permissionTypeName:
          type: string
          nullable: true
      additionalProperties: false
    PermissionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          nullable: true
      additionalProperties: false
    PermissionTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    PostionResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
          nullable: true
        stationName:
          type: string
          nullable: true
      additionalProperties: false
    RegisterModel:
      required:
        - email
        - firstName
        - lastName
        - organizationId
        - positionId
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        matriculeNo:
          type: string
          nullable: true
        email:
          type: string
        positionId:
          type: string
        organizationId:
          type: string
      additionalProperties: false
    Request:
      type: object
      properties:
        id:
          type: string
          nullable: true
        documentId:
          type: string
          nullable: true
        isApproved:
          type: boolean
        requestValidators:
          type: array
          items:
            $ref: '#/components/schemas/RequestValidator'
          nullable: true
      additionalProperties: false
    RequestValidator:
      type: object
      properties:
        id:
          type: string
          nullable: true
        validatorId:
          type: string
          nullable: true
        requestId:
          type: string
          nullable: true
        granted:
          type: boolean
        dateAction:
          type: string
          format: date-time
        comment:
          type: string
          nullable: true
        request:
          $ref: '#/components/schemas/Request'
        validator:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    StationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        codeIata:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
      additionalProperties: false
    TicketResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        dateDeparture:
          type: string
          format: date-time
        dateDesired:
          type: string
          format: date-time
        carrierName:
          type: integer
          format: int32
        beneficiaryFirstName:
          type: string
          nullable: true
        beneficiaryLastName:
          type: string
          nullable: true
        destinationStationName:
          type: string
          nullable: true
        originStationName:
          type: integer
          format: int32
        ticketTypeName:
          type: integer
          format: int32
      additionalProperties: false
    Tokens:
      type: object
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        matriculeNo:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        scope:
          type: string
          nullable: true
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/Credential'
          nullable: true
        permissionHistories:
          type: array
          items:
            $ref: '#/components/schemas/PermissionHistory'
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          nullable: true
        requestValidators:
          type: array
          items:
            $ref: '#/components/schemas/RequestValidator'
          nullable: true
      additionalProperties: false
    UserResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        matriculeNo:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    ValidationHandleResponse:
      type: object
      additionalProperties: false
    ValidationHanldeRequest:
      type: object
      properties:
        documentId:
          type: string
          nullable: true
        validatorId:
          type: string
          nullable: true
        hasGivenAuthorization:
          type: boolean
        comment:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Using the Authorization header with the Bearer scheme.
      scheme: bearer
security:
  - Bearer:
      - Bearer
