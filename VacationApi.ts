/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  CreatePermissionRequest,
  Permission,
  PermissionResponse,
} from './models';

/**
 * apiVacationGetVacationRequestsGet - parameters interface
 */
export interface IApiVacationGetVacationRequestsGetParams {
}

/**
 * apiVacationMakeVacationRequestPost - parameters interface
 */
export interface IApiVacationMakeVacationRequestPostParams {
  createPermissionRequest?: CreatePermissionRequest;
}

/**
 * VacationApi - API class
 */
@autoinject()
export class VacationApi extends Api {

  /**
   * Creates a new VacationApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   */
  async apiVacationGetVacationRequestsGet(): Promise<Array<PermissionResponse>> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/api/Vacation/GetVacationRequests`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'Bearer' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * @param params.createPermissionRequest 
   */
  async apiVacationMakeVacationRequestPost(params: IApiVacationMakeVacationRequestPostParams): Promise<Permission> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/api/Vacation/MakeVacationRequest`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['createPermissionRequest'] || {}))

      // Authentication 'Bearer' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

