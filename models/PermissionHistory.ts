/* tslint:disable */
/* eslint-disable */
/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
} from './Permission';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface PermissionHistory
 */
export interface PermissionHistory {
    /**
     * 
     * @type {number}
     * @memberof PermissionHistory
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PermissionHistory
     */
    permissionId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionHistory
     */
    response?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionHistory
     */
    note?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionHistory
     */
    authorityId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PermissionHistory
     */
    dateDecision?: Date;
    /**
     * 
     * @type {User}
     * @memberof PermissionHistory
     */
    authority?: User;
    /**
     * 
     * @type {Permission}
     * @memberof PermissionHistory
     */
    permission?: Permission;
}

/**
 * Check if a given object implements the PermissionHistory interface.
 */
export function instanceOfPermissionHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PermissionHistoryFromJSON(json: any): PermissionHistory {
    return PermissionHistoryFromJSONTyped(json, false);
}

export function PermissionHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'permissionId': !exists(json, 'permissionId') ? undefined : json['permissionId'],
        'response': !exists(json, 'response') ? undefined : json['response'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'authorityId': !exists(json, 'authorityId') ? undefined : json['authorityId'],
        'dateDecision': !exists(json, 'dateDecision') ? undefined : (new Date(json['dateDecision'])),
        'authority': !exists(json, 'authority') ? undefined : UserFromJSON(json['authority']),
        'permission': !exists(json, 'permission') ? undefined : PermissionFromJSON(json['permission']),
    };
}

export function PermissionHistoryToJSON(value?: PermissionHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'permissionId': value.permissionId,
        'response': value.response,
        'note': value.note,
        'authorityId': value.authorityId,
        'dateDecision': value.dateDecision === undefined ? undefined : (value.dateDecision.toISOString()),
        'authority': UserToJSON(value.authority),
        'permission': PermissionToJSON(value.permission),
    };
}

