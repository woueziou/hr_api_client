/* tslint:disable */
/* eslint-disable */
/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PermissionResponse
 */
export interface PermissionResponse {
    /**
     * 
     * @type {string}
     * @memberof PermissionResponse
     */
    id?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PermissionResponse
     */
    dateStart?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PermissionResponse
     */
    dateReturn?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof PermissionResponse
     */
    isAllowed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PermissionResponse
     */
    userFirstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionResponse
     */
    userLastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionResponse
     */
    permissionTypeName?: string | null;
}

/**
 * Check if a given object implements the PermissionResponse interface.
 */
export function instanceOfPermissionResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PermissionResponseFromJSON(json: any): PermissionResponse {
    return PermissionResponseFromJSONTyped(json, false);
}

export function PermissionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'dateStart': !exists(json, 'dateStart') ? undefined : (new Date(json['dateStart'])),
        'dateReturn': !exists(json, 'dateReturn') ? undefined : (new Date(json['dateReturn'])),
        'isAllowed': !exists(json, 'isAllowed') ? undefined : json['isAllowed'],
        'userFirstName': !exists(json, 'userFirstName') ? undefined : json['userFirstName'],
        'userLastName': !exists(json, 'userLastName') ? undefined : json['userLastName'],
        'permissionTypeName': !exists(json, 'permissionTypeName') ? undefined : json['permissionTypeName'],
    };
}

export function PermissionResponseToJSON(value?: PermissionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'dateStart': value.dateStart === undefined ? undefined : (value.dateStart.toISOString()),
        'dateReturn': value.dateReturn === undefined ? undefined : (value.dateReturn.toISOString()),
        'isAllowed': value.isAllowed,
        'userFirstName': value.userFirstName,
        'userLastName': value.userLastName,
        'permissionTypeName': value.permissionTypeName,
    };
}

