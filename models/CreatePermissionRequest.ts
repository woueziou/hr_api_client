/* tslint:disable */
/* eslint-disable */
/**
 * HR API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePermissionRequest
 */
export interface CreatePermissionRequest {
    /**
     * 
     * @type {Date}
     * @memberof CreatePermissionRequest
     */
    dateStart: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreatePermissionRequest
     */
    dateReturn: Date;
    /**
     * 
     * @type {string}
     * @memberof CreatePermissionRequest
     */
    backupUserId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CreatePermissionRequest
     */
    permissionTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof CreatePermissionRequest
     */
    additionalComments?: string | null;
}

/**
 * Check if a given object implements the CreatePermissionRequest interface.
 */
export function instanceOfCreatePermissionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dateStart" in value;
    isInstance = isInstance && "dateReturn" in value;

    return isInstance;
}

export function CreatePermissionRequestFromJSON(json: any): CreatePermissionRequest {
    return CreatePermissionRequestFromJSONTyped(json, false);
}

export function CreatePermissionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePermissionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dateStart': (new Date(json['dateStart'])),
        'dateReturn': (new Date(json['dateReturn'])),
        'backupUserId': !exists(json, 'backupUserId') ? undefined : json['backupUserId'],
        'permissionTypeId': !exists(json, 'permissionTypeId') ? undefined : json['permissionTypeId'],
        'additionalComments': !exists(json, 'additionalComments') ? undefined : json['additionalComments'],
    };
}

export function CreatePermissionRequestToJSON(value?: CreatePermissionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dateStart': (value.dateStart.toISOString()),
        'dateReturn': (value.dateReturn.toISOString()),
        'backupUserId': value.backupUserId,
        'permissionTypeId': value.permissionTypeId,
        'additionalComments': value.additionalComments,
    };
}

